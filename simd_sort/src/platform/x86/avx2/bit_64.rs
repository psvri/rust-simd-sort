pub const LOADU_MASK: [[i64; 8]; 9] = [
    [0, 0, 0, 0, 0, 0, 0, 0],
    [-1, 0, 0, 0, 0, 0, 0, 0],
    [-1, -1, 0, 0, 0, 0, 0, 0],
    [-1, -1, -1, 0, 0, 0, 0, 0],
    [-1, -1, -1, -1, 0, 0, 0, 0],
    [-1, -1, -1, -1, -1, 0, 0, 0],
    [-1, -1, -1, -1, -1, -1, 0, 0],
    [-1, -1, -1, -1, -1, -1, -1, 0],
    [-1, -1, -1, -1, -1, -1, -1, -1],
];

pub const V_INDEX_1: [i32; 4] = [0, 1, 2, 3];
pub const V_INDEX_2: [i32; 4] = [4, 5, 6, 7];

/// [1, 0, 3, 2, 5, 4, 7, 6]
pub const SHUFFLE1_1_1_1: i32 = 0b10110001;

pub const COMPRESS_PERMUTATIONS: [[i32; 8]; 16] = [
    [0, 1, 2, 3, 4, 5, 6, 7], //0000
    [0, 1, 2, 3, 4, 5, 6, 7], //0001
    [2, 3, 2, 3, 4, 5, 6, 7], //0010
    [0, 1, 2, 3, 4, 5, 6, 7], //0011
    [4, 5, 2, 3, 4, 5, 6, 7], //0100
    [0, 1, 4, 5, 4, 5, 6, 7], //0101
    [2, 3, 4, 5, 4, 5, 6, 7], //0110
    [0, 1, 2, 3, 4, 5, 6, 7], //0111
    [6, 7, 2, 3, 4, 5, 6, 7], //1000
    [0, 1, 6, 7, 4, 5, 6, 7], //1001
    [2, 3, 6, 7, 4, 5, 6, 7], //1010
    [0, 1, 2, 3, 6, 7, 6, 7], //1011
    [4, 5, 6, 7, 4, 5, 6, 7], //1100
    [0, 1, 4, 5, 6, 7, 6, 7], //1101
    [2, 3, 4, 5, 6, 7, 6, 7], //1110
    [0, 1, 2, 3, 4, 5, 6, 7], //1111
];

pub const COMPRESS_MASK: [[i64; 4]; 5] = [
    [0, 0, 0, 0],
    [-1, 0, 0, 0],
    [-1, -1, 0, 0],
    [-1, -1, -1, 0],
    [-1, -1, -1, -1],
];

pub const NETWORK_64BIT_1: i32 = 0b00011011;
pub const NETWORK_64BIT_2: i32 = 0b00011011;
pub const NETWORK_64BIT_3: i32 = 0b01001110;
